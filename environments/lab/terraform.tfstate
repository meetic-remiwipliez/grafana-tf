{
  "version": 4,
  "terraform_version": "1.6.6",
  "serial": 42,
  "lineage": "e917b5f1-9e60-2358-e0ca-6ad42826768b",
  "outputs": {
    "alert_rules": {
      "value": [
        {
          "annotations": {
            "description": "Test alert for validation",
            "runbook_url": "",
            "summary": "Test alert for validation"
          },
          "condition": "A",
          "for": "5m",
          "labels": {
            "Environment": "qa",
            "ManagedBy": "terraform",
            "Project": "grafana-alerts",
            "group": "qa-custom",
            "severity": "warning"
          },
          "name": "Custom Test Alert"
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "annotations": [
                "map",
                "string"
              ],
              "condition": "string",
              "for": "string",
              "labels": [
                "map",
                "string"
              ],
              "name": "string"
            }
          ]
        ]
      ]
    },
    "kubernetes_folders": {
      "value": {
        "kubernetes_apps": {
          "id": "0:kubernetes-apps",
          "title": "Kubernetes Apps",
          "uid": "kubernetes-apps",
          "url": "http://localhost:3000/dashboards/f/kubernetes-apps/kubernetes-apps"
        },
        "kubernetes_recording_rules": {
          "id": "0:kubernetes-recording-rules",
          "title": "Kubernetes Recording Rules",
          "uid": "kubernetes-recording-rules",
          "url": "http://localhost:3000/dashboards/f/kubernetes-recording-rules/kubernetes-recording-rules"
        },
        "kubernetes_resources": {
          "id": "0:kubernetes-resources",
          "title": "Kubernetes Resources",
          "uid": "kubernetes-resources",
          "url": "http://localhost:3000/dashboards/f/kubernetes-resources/kubernetes-resources"
        },
        "kubernetes_storage": {
          "id": "0:kubernetes-storage",
          "title": "Kubernetes Storage",
          "uid": "kubernetes-storage",
          "url": "http://localhost:3000/dashboards/f/kubernetes-storage/kubernetes-storage"
        },
        "kubernetes_system": {
          "id": "0:kubernetes-system",
          "title": "Kubernetes System",
          "uid": "kubernetes-system",
          "url": "http://localhost:3000/dashboards/f/kubernetes-system/kubernetes-system"
        }
      },
      "type": [
        "object",
        {
          "kubernetes_apps": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_recording_rules": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_resources": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_storage": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_system": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ]
        }
      ]
    },
    "kubernetes_rule_groups": {
      "value": {
        "kube_apiserver_availability": {
          "id": "0:kubernetes-recording-rules:kube-apiserver-availability.rules",
          "name": "kube-apiserver-availability.rules"
        },
        "kube_apiserver_burnrate": {
          "id": "0:kubernetes-recording-rules:kube-apiserver-burnrate.rules",
          "name": "kube-apiserver-burnrate.rules"
        },
        "kubernetes_apps": {
          "id": "0:kubernetes-apps:kubernetes-apps",
          "name": "kubernetes-apps"
        },
        "kubernetes_resources": {
          "id": "0:kubernetes-resources:kubernetes-resources",
          "name": "kubernetes-resources"
        }
      },
      "type": [
        "object",
        {
          "kube_apiserver_availability": [
            "object",
            {
              "id": "string",
              "name": "string"
            }
          ],
          "kube_apiserver_burnrate": [
            "object",
            {
              "id": "string",
              "name": "string"
            }
          ],
          "kubernetes_apps": [
            "object",
            {
              "id": "string",
              "name": "string"
            }
          ],
          "kubernetes_resources": [
            "object",
            {
              "id": "string",
              "name": "string"
            }
          ]
        }
      ]
    },
    "notification_channels": {
      "value": {
        "email_ops": {
          "id": "0:email-ops",
          "name": "email-ops"
        }
      },
      "type": [
        "object",
        {
          "email_ops": [
            "object",
            {
              "id": "string",
              "name": "string"
            }
          ]
        }
      ]
    }
  },
  "resources": [
    {
      "module": "module.alert_rules",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "alert_rules",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-apps",
            "id": "0:kubernetes-apps:QA Additional Alerts",
            "interval_seconds": 60,
            "name": "QA Additional Alerts",
            "org_id": "1",
            "rule": [
              {
                "annotations": {
                  "description": "Test alert for validation",
                  "runbook_url": "",
                  "summary": "Test alert for validation"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"up == 0\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "5m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "Environment": "qa",
                  "ManagedBy": "terraform",
                  "Project": "grafana-alerts",
                  "group": "qa-custom",
                  "severity": "warning"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "Custom Test Alert",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "beqp8kn0kpp8ge"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_apps",
            "module.kubernetes_alerts.grafana_folder.kubernetes_recording_rules",
            "module.kubernetes_alerts.grafana_folder.kubernetes_resources",
            "module.kubernetes_alerts.grafana_folder.kubernetes_storage",
            "module.kubernetes_alerts.grafana_folder.kubernetes_system"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_apps",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-apps",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Apps",
            "uid": "kubernetes-apps",
            "url": "http://localhost:3000/dashboards/f/kubernetes-apps/kubernetes-apps"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_recording_rules",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-recording-rules",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Recording Rules",
            "uid": "kubernetes-recording-rules",
            "url": "http://localhost:3000/dashboards/f/kubernetes-recording-rules/kubernetes-recording-rules"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_resources",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-resources",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Resources",
            "uid": "kubernetes-resources",
            "url": "http://localhost:3000/dashboards/f/kubernetes-resources/kubernetes-resources"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_storage",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-storage",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Storage",
            "uid": "kubernetes-storage",
            "url": "http://localhost:3000/dashboards/f/kubernetes-storage/kubernetes-storage"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_system",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-system",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes System",
            "uid": "kubernetes-system",
            "url": "http://localhost:3000/dashboards/f/kubernetes-system/kubernetes-system"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "kube_apiserver_availability",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-recording-rules",
            "id": "0:kubernetes-recording-rules:kube-apiserver-availability.rules",
            "interval_seconds": 180,
            "name": "kube-apiserver-availability.rules",
            "org_id": "1",
            "rule": [
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "code_verb:apiserver_request_total:increase30d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kih0d24ge"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~\\\"LIST|GET\\\"})\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "code:apiserver_request_total:increase30d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kih0d24ie"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "beqp8kihacni8f"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kihacni9c"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h{le=\\\"+Inf\\\"})\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kihacniae"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster, verb, scope) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{le=\\\"+Inf\\\"})\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kihcujuod"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"1 - (\\n  (\\n    # write too slow\\n    sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~\\\"POST|PUT|PATCH|DELETE\\\"})\\n    -\\n    sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~\\\"POST|PUT|PATCH|DELETE\\\",le=~\\\"1(\\\\\\\\.0)?\\\"} or vector(0))\\n  ) +\\n  (\\n    # read too slow\\n    sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~\\\"LIST|GET\\\"})\\n    -\\n    (\\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~\\\"LIST|GET\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"} or vector(0))\\n      +\\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~\\\"LIST|GET\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"} or vector(0))\\n      +\\n      sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~\\\"LIST|GET\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"} or vector(0))\\n    )\\n  ) +\\n  # errors\\n  sum by (cluster) (code:apiserver_request_total:increase30d{code=~\\\"5..\\\"} or vector(0))\\n)\\n/\\nsum by (cluster) (code:apiserver_request_total:increase30d)\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "all"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:availability30d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kihcujupe"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster,code,resource) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[5m]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "code_resource:apiserver_request_total:rate5m",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kihcujuqa"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (cluster, code, verb) (increase(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET|POST|PUT|PATCH|DELETE\\\",code=~\\\"2..\\\"}[1h]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "code_verb:apiserver_request_total:increase1h",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kihcujurd"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_recording_rules"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "kube_apiserver_burnrate",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-recording-rules",
            "id": "0:kubernetes-recording-rules:kube-apiserver-burnrate.rules",
            "interval_seconds": 60,
            "name": "kube-apiserver-burnrate.rules",
            "org_id": "1",
            "rule": [
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[1d]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[1d]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[1d]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[1d]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[1d]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[1d]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate1d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kil3p2iod"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[1h]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[1h]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[1h]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[1h]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[1h]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[1h]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate1h",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kil66yv4b"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[2h]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[2h]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[2h]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[2h]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[2h]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[2h]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate2h",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kilioglcb"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[30m]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[30m]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[30m]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[30m]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[30m]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[30m]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate30m",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kill6cxsc"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[3d]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[3d]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[3d]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[3d]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[3d]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[3d]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate3d",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kill6cxte"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[5m]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[5m]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[5m]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[5m]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[5m]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[5m]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate5m",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kill6cxuc"
              },
              {
                "annotations": null,
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    # too slow\\n    sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\"}[6h]))\\n    -\\n    (\\n      (\\n        sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=~\\\"resource|\\\",le=~\\\"1(\\\\\\\\.0)?\\\"}[6h]))\\n        or\\n        vector(0)\\n      )\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"namespace\\\",le=~\\\"5(\\\\\\\\.0)?\\\"}[6h]))\\n      +\\n      sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",subresource!~\\\"proxy|attach|log|exec|portforward\\\",scope=\\\"cluster\\\",le=~\\\"30(\\\\\\\\.0)?\\\"}[6h]))\\n    )\\n  )\\n  +\\n  # errors\\n  sum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\",code=~\\\"5..\\\"}[6h]))\\n)\\n/\\nsum by (cluster) (rate(apiserver_request_total{job=\\\"kube-apiserver\\\",verb=~\\\"LIST|GET\\\"}[6h]))\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "team": "platform",
                  "verb": "read"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "apiserver_request:burnrate6h",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kilno9a8a"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_recording_rules"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "kubernetes_apps",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-apps",
            "id": "0:kubernetes-apps:kubernetes-apps",
            "interval_seconds": 60,
            "name": "kubernetes-apps",
            "org_id": "1",
            "rule": [
              {
                "annotations": {
                  "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is in waiting state (reason: \"CrashLoopBackOff\").",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping",
                  "summary": "Pod is crash looping."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"max_over_time(kube_pod_container_status_waiting_reason{reason=\\\"CrashLoopBackOff\\\", job=\\\"kube-state-metrics\\\"}[5m]) \\u003e= 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubePodCrashLooping",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kn70y9dsd"
              },
              {
                "annotations": {
                  "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready",
                  "summary": "Pod has been in a non-ready state for more than 15 minutes."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by (namespace, pod, cluster) (\\n  max by(namespace, pod, cluster) (\\n    kube_pod_status_phase{job=\\\"kube-state-metrics\\\", phase=~\\\"Pending|Unknown|Failed\\\"}\\n  ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (\\n    1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!=\\\"Job\\\"})\\n  )\\n) \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubePodNotReady",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "ceqp8kn73g5q8d"
              },
              {
                "annotations": {
                  "description": "Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch",
                  "summary": "Deployment generation mismatch due to possible roll-back"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_deployment_status_observed_generation{job=\\\"kube-state-metrics\\\"}\\n  !=\\nkube_deployment_metadata_generation{job=\\\"kube-state-metrics\\\"}\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeDeploymentGenerationMismatch",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kn73g5q9b"
              },
              {
                "annotations": {
                  "description": "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch",
                  "summary": "Deployment has not matched the expected number of replicas."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  kube_deployment_spec_replicas{job=\\\"kube-state-metrics\\\"}\\n    \\u003e\\n  kube_deployment_status_replicas_available{job=\\\"kube-state-metrics\\\"}\\n) and (\\n  changes(kube_deployment_status_replicas_updated{job=\\\"kube-state-metrics\\\"}[10m])\\n    ==\\n  0\\n)\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeDeploymentReplicasMismatch",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kn73g5qad"
              },
              {
                "annotations": {
                  "description": "Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment }} is not progressing for longer than 15 minutes.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentrolloutstuck",
                  "summary": "Deployment rollout is not progressing."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_deployment_status_condition{condition=\\\"Progressing\\\", status=\\\"false\\\",job=\\\"kube-state-metrics\\\"}\\n!= 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeDeploymentRolloutStuck",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "ceqp8kn75y22of"
              },
              {
                "annotations": {
                  "description": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch",
                  "summary": "StatefulSet has not matched the expected number of replicas."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  kube_statefulset_status_replicas_ready{job=\\\"kube-state-metrics\\\"}\\n    !=\\n  kube_statefulset_replicas{job=\\\"kube-state-metrics\\\"}\\n) and (\\n  changes(kube_statefulset_status_replicas_updated{job=\\\"kube-state-metrics\\\"}[10m])\\n    ==\\n  0\\n)\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeStatefulSetReplicasMismatch",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "ceqp8kn75y22pc"
              },
              {
                "annotations": {
                  "description": "StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch",
                  "summary": "StatefulSet generation mismatch due to possible roll-back"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_statefulset_status_observed_generation{job=\\\"kube-state-metrics\\\"}\\n  !=\\nkube_statefulset_metadata_generation{job=\\\"kube-state-metrics\\\"}\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeStatefulSetGenerationMismatch",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kn75y22qb"
              },
              {
                "annotations": {
                  "description": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout",
                  "summary": "StatefulSet update has not been rolled out."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  max by(namespace, statefulset, job, cluster) (\\n    kube_statefulset_status_current_revision{job=\\\"kube-state-metrics\\\"}\\n      unless\\n    kube_statefulset_status_update_revision{job=\\\"kube-state-metrics\\\"}\\n  )\\n    * on(namespace, statefulset, job, cluster)\\n  (\\n    kube_statefulset_replicas{job=\\\"kube-state-metrics\\\"}\\n      !=\\n    kube_statefulset_status_replicas_updated{job=\\\"kube-state-metrics\\\"}\\n  )\\n)  and on(namespace, statefulset, job, cluster) (\\n  changes(kube_statefulset_status_replicas_updated{job=\\\"kube-state-metrics\\\"}[5m])\\n    ==\\n  0\\n)\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeStatefulSetUpdateNotRolledOut",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kn75y22rc"
              },
              {
                "annotations": {
                  "description": "DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15m.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck",
                  "summary": "DaemonSet rollout is stuck."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  (\\n    kube_daemonset_status_current_number_scheduled{job=\\\"kube-state-metrics\\\"}\\n     !=\\n    kube_daemonset_status_desired_number_scheduled{job=\\\"kube-state-metrics\\\"}\\n  ) or (\\n    kube_daemonset_status_number_misscheduled{job=\\\"kube-state-metrics\\\"}\\n     !=\\n    0\\n  ) or (\\n    kube_daemonset_status_updated_number_scheduled{job=\\\"kube-state-metrics\\\"}\\n     !=\\n    kube_daemonset_status_desired_number_scheduled{job=\\\"kube-state-metrics\\\"}\\n  ) or (\\n    kube_daemonset_status_number_available{job=\\\"kube-state-metrics\\\"}\\n     !=\\n    kube_daemonset_status_desired_number_scheduled{job=\\\"kube-state-metrics\\\"}\\n  )\\n) and (\\n  changes(kube_daemonset_status_updated_number_scheduled{job=\\\"kube-state-metrics\\\"}[5m])\\n    ==\\n  0\\n)\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeDaemonSetRolloutStuck",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kn78fyf4c"
              },
              {
                "annotations": {
                  "description": "pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on container {{ $labels.container}} has been in waiting state for longer than 1 hour. (reason: \"{{ $labels.reason }}\").",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting",
                  "summary": "Pod container waiting longer than 1 hour"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_pod_container_status_waiting_reason{reason!=\\\"CrashLoopBackOff\\\", job=\\\"kube-state-metrics\\\"} \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "1h0m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeContainerWaiting",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "ceqp8kn78fyf5d"
              },
              {
                "annotations": {
                  "description": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled",
                  "summary": "DaemonSet pods are not scheduled."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_daemonset_status_desired_number_scheduled{job=\\\"kube-state-metrics\\\"}\\n  -\\nkube_daemonset_status_current_number_scheduled{job=\\\"kube-state-metrics\\\"} \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "10m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeDaemonSetNotScheduled",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "ceqp8kn78fyf6d"
              },
              {
                "annotations": {
                  "description": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled",
                  "summary": "DaemonSet pods are misscheduled."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_daemonset_status_number_misscheduled{job=\\\"kube-state-metrics\\\"} \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeDaemonSetMisScheduled",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kn78fyf7b"
              },
              {
                "annotations": {
                  "description": "Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than {{ \"43200\" | humanizeDuration }} to complete.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobnotcompleted",
                  "summary": "Job did not complete in time"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job=\\\"kube-state-metrics\\\"}\\n  and\\nkube_job_status_active{job=\\\"kube-state-metrics\\\"} \\u003e 0) \\u003e 43200\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeJobNotCompleted",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "ceqp8kn7axurkd"
              },
              {
                "annotations": {
                  "description": "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed",
                  "summary": "Job failed to complete."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_job_failed{job=\\\"kube-state-metrics\\\"}  \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeJobFailed",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kn7axurla"
              },
              {
                "annotations": {
                  "description": "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has not matched the desired number of replicas for longer than 15 minutes.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch",
                  "summary": "HPA has not matched desired number of replicas."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(kube_horizontalpodautoscaler_status_desired_replicas{job=\\\"kube-state-metrics\\\"}\\n  !=\\nkube_horizontalpodautoscaler_status_current_replicas{job=\\\"kube-state-metrics\\\"})\\n  and\\n(kube_horizontalpodautoscaler_status_current_replicas{job=\\\"kube-state-metrics\\\"}\\n  \\u003e\\nkube_horizontalpodautoscaler_spec_min_replicas{job=\\\"kube-state-metrics\\\"})\\n  and\\n(kube_horizontalpodautoscaler_status_current_replicas{job=\\\"kube-state-metrics\\\"}\\n  \\u003c\\nkube_horizontalpodautoscaler_spec_max_replicas{job=\\\"kube-state-metrics\\\"})\\n  and\\nchanges(kube_horizontalpodautoscaler_status_current_replicas{job=\\\"kube-state-metrics\\\"}[15m]) == 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeHpaReplicasMismatch",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kn7axurma"
              },
              {
                "annotations": {
                  "description": "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has been running at max replicas for longer than 15 minutes.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout",
                  "summary": "HPA is running at max replicas"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_horizontalpodautoscaler_status_current_replicas{job=\\\"kube-state-metrics\\\"}\\n  ==\\nkube_horizontalpodautoscaler_spec_max_replicas{job=\\\"kube-state-metrics\\\"}\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeHpaMaxedOut",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kn7axurnb"
              },
              {
                "annotations": {
                  "description": "PDB {{ $labels.namespace }}/{{ $labels.poddisruptionbudget }} expects {{ $value }} more healthy pods. The desired number of healthy pods has not been met for at least 15m.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepdbnotenoughhealthypods",
                  "summary": "PDB does not have enough healthy pods."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"(\\n  kube_poddisruptionbudget_status_desired_healthy{job=\\\"kube-state-metrics\\\"}\\n  -\\n  kube_poddisruptionbudget_status_current_healthy{job=\\\"kube-state-metrics\\\"}\\n)\\n\\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubePdbNotEnoughHealthyPods",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kn7dfr40a"
              },
              {
                "annotations": {
                  "description": "The API server is burning too much error budget.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn",
                  "summary": "The API server is burning too much error budget."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum by(cluster) (apiserver_request:burnrate1h) \\u003e (14.40 * 0.01000)\\nand on(cluster)\\nsum by(cluster) (apiserver_request:burnrate5m) \\u003e (14.40 * 0.01000)\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "2m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "long": "1h",
                  "severity": "critical",
                  "short": "5m",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeAPIErrorBudgetBurn",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kn7dfr41b"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_apps"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "kubernetes_resources",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-resources",
            "id": "0:kubernetes-resources:kubernetes-resources",
            "interval_seconds": 60,
            "name": "kubernetes-resources",
            "org_id": "1",
            "rule": [
              {
                "annotations": {
                  "description": "Cluster has overcommitted CPU resource requests for Pods by {{ $value }} CPU shares and cannot tolerate node failure.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit",
                  "summary": "Cluster has overcommitted CPU resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{}) - (sum(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\nand\\n(sum(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "10m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeCPUOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqp8kmlxt4aob"
              },
              {
                "annotations": {
                  "description": "Cluster has overcommitted memory resource requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node failure.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit",
                  "summary": "Cluster has overcommitted memory resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{}) - (sum(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\nand\\n(sum(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "10m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeMemoryOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "beqp8kmlxt4apd"
              },
              {
                "annotations": {
                  "description": "Cluster has overcommitted CPU resource requests for Namespaces.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit",
                  "summary": "Cluster has overcommitted CPU resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(min without(resource) (kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\", resource=~\\\"(cpu|requests.cpu)\\\"}))\\n  /\\nsum(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"})\\n  \\u003e 1.5\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "5m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeCPUQuotaOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kmm0b0n4f"
              },
              {
                "annotations": {
                  "description": "Cluster has overcommitted memory resource requests for Namespaces.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit",
                  "summary": "Cluster has overcommitted memory resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(min without(resource) (kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\", resource=~\\\"(memory|requests.memory)\\\"}))\\n  /\\nsum(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"})\\n  \\u003e 1.5\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "5m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeMemoryQuotaOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqp8kmm0b0n5c"
              },
              {
                "annotations": {
                  "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull",
                  "summary": "Namespace quota is going to be full."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"used\\\"}\\n  / ignoring(instance, job, type)\\n(kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\"} \\u003e 0)\\n  \\u003e 0.9 \\u003c 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "info",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeQuotaAlmostFull",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kmm0b0n6b"
              },
              {
                "annotations": {
                  "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused",
                  "summary": "Namespace quota is fully used."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"used\\\"}\\n  / ignoring(instance, job, type)\\n(kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\"} \\u003e 0)\\n  == 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "info",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeQuotaFullyUsed",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "beqp8kmm0b0n7e"
              },
              {
                "annotations": {
                  "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded",
                  "summary": "Namespace quota has exceeded the limits."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"used\\\"}\\n  / ignoring(instance, job, type)\\n(kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\"} \\u003e 0)\\n  \\u003e 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "KubeQuotaExceeded",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqp8kmm2swzkc"
              },
              {
                "annotations": {
                  "description": "{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh",
                  "summary": "Processes experience elevated CPU throttling."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(increase(container_cpu_cfs_throttled_periods_total{container!=\\\"\\\", job=\\\"cadvisor\\\", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)\\n  / on (cluster, namespace, pod, container, instance) group_left\\nsum(increase(container_cpu_cfs_periods_total{job=\\\"cadvisor\\\", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)\\n  \\u003e ( 25 / 100 )\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "keep_firing_for": "",
                "labels": {
                  "environment": "qa",
                  "severity": "info",
                  "team": "platform"
                },
                "missing_series_evals_to_resolve": 0,
                "name": "CPUThrottlingHigh",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqp8kmm2swzla"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_resources"
          ]
        }
      ]
    },
    {
      "module": "module.notification_channels",
      "mode": "managed",
      "type": "grafana_contact_point",
      "name": "notification_channels",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "index_key": "email_ops",
          "schema_version": 0,
          "attributes": {
            "alertmanager": [],
            "dingding": [],
            "disable_provenance": false,
            "discord": [],
            "email": [
              {
                "addresses": [
                  "ops@example.com"
                ],
                "disable_resolve_message": false,
                "message": "{{ template \"email.default.message\" . }}",
                "settings": {},
                "single_email": true,
                "subject": "{{ template \"email.default.subject\" . }}",
                "uid": "eeqp8kgz41xj4d"
              }
            ],
            "googlechat": [],
            "id": "0:email-ops",
            "kafka": [],
            "line": [],
            "name": "email-ops",
            "oncall": [],
            "opsgenie": [],
            "org_id": "0",
            "pagerduty": [],
            "pushover": [],
            "sensugo": [],
            "slack": [],
            "sns": [],
            "teams": [],
            "telegram": [],
            "threema": [],
            "victorops": [],
            "webex": [],
            "webhook": [],
            "wecom": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": []
}
