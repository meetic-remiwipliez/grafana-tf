{
  "version": 4,
  "terraform_version": "1.6.6",
  "serial": 99,
  "lineage": "f36d5ad5-bd92-647c-8fa8-388e45d4b602",
  "outputs": {
    "alert_rules": {
      "value": [
        {
          "annotations": {
            "description": "Test alert for validation",
            "runbook_url": "",
            "summary": "Test alert for validation"
          },
          "condition": "A",
          "for": "5m0s",
          "labels": {
            "Environment": "qa",
            "ManagedBy": "terraform",
            "Project": "grafana-alerts",
            "group": "qa-custom",
            "severity": "warning"
          },
          "name": "Custom Test Alert"
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "annotations": [
                "map",
                "string"
              ],
              "condition": "string",
              "for": "string",
              "labels": [
                "map",
                "string"
              ],
              "name": "string"
            }
          ]
        ]
      ]
    },
    "kubernetes_folders": {
      "value": {
        "kubernetes_apps": {
          "id": "0:kubernetes-apps",
          "title": "Kubernetes Apps",
          "uid": "kubernetes-apps",
          "url": "http://localhost:3000/dashboards/f/kubernetes-apps/kubernetes-apps"
        },
        "kubernetes_recording_rules": {
          "id": "0:kubernetes-recording-rules",
          "title": "Kubernetes Recording Rules",
          "uid": "kubernetes-recording-rules",
          "url": "http://localhost:3000/dashboards/f/kubernetes-recording-rules/kubernetes-recording-rules"
        },
        "kubernetes_resources": {
          "id": "0:kubernetes-resources",
          "title": "Kubernetes Resources",
          "uid": "kubernetes-resources",
          "url": "http://localhost:3000/dashboards/f/kubernetes-resources/kubernetes-resources"
        },
        "kubernetes_storage": {
          "id": "0:kubernetes-storage",
          "title": "Kubernetes Storage",
          "uid": "kubernetes-storage",
          "url": "http://localhost:3000/dashboards/f/kubernetes-storage/kubernetes-storage"
        },
        "kubernetes_system": {
          "id": "0:kubernetes-system",
          "title": "Kubernetes System",
          "uid": "kubernetes-system",
          "url": "http://localhost:3000/dashboards/f/kubernetes-system/kubernetes-system"
        }
      },
      "type": [
        "object",
        {
          "kubernetes_apps": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_recording_rules": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_resources": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_storage": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ],
          "kubernetes_system": [
            "object",
            {
              "id": "string",
              "title": "string",
              "uid": "string",
              "url": "string"
            }
          ]
        }
      ]
    },
    "notification_channels": {
      "value": {
        "email_ops": {
          "id": "0:email-ops",
          "name": "email-ops"
        }
      },
      "type": [
        "object",
        {
          "email_ops": [
            "object",
            {
              "id": "string",
              "name": "string"
            }
          ]
        }
      ]
    }
  },
  "resources": [
    {
      "module": "module.alert_rules",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "alert_rules",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-apps",
            "id": "0:kubernetes-apps:QA Additional Alerts",
            "interval_seconds": 60,
            "name": "QA Additional Alerts",
            "org_id": "1",
            "rule": [
              {
                "annotations": {
                  "description": "Test alert for validation",
                  "runbook_url": "",
                  "summary": "Test alert for validation"
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"up == 0\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "5m0s",
                "is_paused": false,
                "labels": {
                  "Environment": "qa",
                  "ManagedBy": "terraform",
                  "Project": "grafana-alerts",
                  "group": "qa-custom",
                  "severity": "warning"
                },
                "name": "Custom Test Alert",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqgy8uulrkzkc"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_apps",
            "module.kubernetes_alerts.grafana_folder.kubernetes_recording_rules",
            "module.kubernetes_alerts.grafana_folder.kubernetes_resources",
            "module.kubernetes_alerts.grafana_folder.kubernetes_storage",
            "module.kubernetes_alerts.grafana_folder.kubernetes_system"
          ]
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_apps",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-apps",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Apps",
            "uid": "kubernetes-apps",
            "url": "http://localhost:3000/dashboards/f/kubernetes-apps/kubernetes-apps"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_recording_rules",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-recording-rules",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Recording Rules",
            "uid": "kubernetes-recording-rules",
            "url": "http://localhost:3000/dashboards/f/kubernetes-recording-rules/kubernetes-recording-rules"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_resources",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-resources",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Resources",
            "uid": "kubernetes-resources",
            "url": "http://localhost:3000/dashboards/f/kubernetes-resources/kubernetes-resources"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_storage",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-storage",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes Storage",
            "uid": "kubernetes-storage",
            "url": "http://localhost:3000/dashboards/f/kubernetes-storage/kubernetes-storage"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_folder",
      "name": "kubernetes_system",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "0:kubernetes-system",
            "org_id": "0",
            "parent_folder_uid": "",
            "prevent_destroy_if_not_empty": false,
            "title": "Kubernetes System",
            "uid": "kubernetes-system",
            "url": "http://localhost:3000/dashboards/f/kubernetes-system/kubernetes-system"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.kubernetes_alerts",
      "mode": "managed",
      "type": "grafana_rule_group",
      "name": "kubernetes_resources",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_provenance": false,
            "folder_uid": "kubernetes-resources",
            "id": "0:kubernetes-resources:kubernetes-resources",
            "interval_seconds": 60,
            "name": "kubernetes-resources",
            "org_id": "1",
            "rule": [
              {
                "annotations": {
                  "description": "Cluster has overcommitted CPU resource requests for Pods by {{ $value }} CPU shares and cannot tolerate node failure.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit",
                  "summary": "Cluster has overcommitted CPU resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(namespace_cpu:kube_pod_container_resource_requests:sum{}) - (sum(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\nand\\n(sum(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "10m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "name": "KubeCPUOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqgy8uvd8gsgc"
              },
              {
                "annotations": {
                  "description": "Cluster has overcommitted memory resource requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node failure.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit",
                  "summary": "Cluster has overcommitted memory resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(namespace_memory:kube_pod_container_resource_requests:sum{}) - (sum(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\nand\\n(sum(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"}) - max(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"})) \\u003e 0\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "10m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "name": "KubeMemoryOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqgy8uvd8gshc"
              },
              {
                "annotations": {
                  "description": "Cluster has overcommitted CPU resource requests for Namespaces.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit",
                  "summary": "Cluster has overcommitted CPU resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(min without(resource) (kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\", resource=~\\\"(cpu|requests.cpu)\\\"}))\\n  /\\nsum(kube_node_status_allocatable{resource=\\\"cpu\\\", job=\\\"kube-state-metrics\\\"})\\n  \\u003e 1.5\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "5m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "name": "KubeCPUQuotaOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "deqgy8uvd8gsia"
              },
              {
                "annotations": {
                  "description": "Cluster has overcommitted memory resource requests for Namespaces.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit",
                  "summary": "Cluster has overcommitted memory resource requests."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(min without(resource) (kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\", resource=~\\\"(memory|requests.memory)\\\"}))\\n  /\\nsum(kube_node_status_allocatable{resource=\\\"memory\\\", job=\\\"kube-state-metrics\\\"})\\n  \\u003e 1.5\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "5m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "name": "KubeMemoryQuotaOvercommit",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "eeqgy8uvd8gsjd"
              },
              {
                "annotations": {
                  "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull",
                  "summary": "Namespace quota is going to be full."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"used\\\"}\\n  / ignoring(instance, job, type)\\n(kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\"} \\u003e 0)\\n  \\u003e 0.9 \\u003c 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "info",
                  "team": "platform"
                },
                "name": "KubeQuotaAlmostFull",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqgy8uvd8gske"
              },
              {
                "annotations": {
                  "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused",
                  "summary": "Namespace quota is fully used."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"used\\\"}\\n  / ignoring(instance, job, type)\\n(kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\"} \\u003e 0)\\n  == 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "info",
                  "team": "platform"
                },
                "name": "KubeQuotaFullyUsed",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "feqgy8uvd8gslf"
              },
              {
                "annotations": {
                  "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded",
                  "summary": "Namespace quota has exceeded the limits."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"used\\\"}\\n  / ignoring(instance, job, type)\\n(kube_resourcequota{job=\\\"kube-state-metrics\\\", type=\\\"hard\\\"} \\u003e 0)\\n  \\u003e 1\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "warning",
                  "team": "platform"
                },
                "name": "KubeQuotaExceeded",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqgy8uvd8gsmf"
              },
              {
                "annotations": {
                  "description": "{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.",
                  "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh",
                  "summary": "Processes experience elevated CPU throttling."
                },
                "condition": "A",
                "data": [
                  {
                    "datasource_uid": "prometheus",
                    "model": "{\"datasource\":{\"type\":\"prometheus\",\"uid\":\"prometheus\"},\"editorMode\":\"code\",\"expr\":\"sum(increase(container_cpu_cfs_throttled_periods_total{container!=\\\"\\\", job=\\\"cadvisor\\\", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)\\n  / on (cluster, namespace, pod, container, instance) group_left\\nsum(increase(container_cpu_cfs_periods_total{job=\\\"cadvisor\\\", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)\\n  \\u003e ( 25 / 100 )\\n\",\"hide\":false,\"instant\":true,\"legendFormat\":\"__auto\",\"range\":false,\"refId\":\"A\"}",
                    "query_type": "",
                    "ref_id": "A",
                    "relative_time_range": [
                      {
                        "from": 600,
                        "to": 0
                      }
                    ]
                  }
                ],
                "exec_err_state": "Alerting",
                "for": "15m0s",
                "is_paused": false,
                "labels": {
                  "environment": "qa",
                  "severity": "info",
                  "team": "platform"
                },
                "name": "CPUThrottlingHigh",
                "no_data_state": "NoData",
                "notification_settings": [],
                "record": [],
                "uid": "aeqgy8uvfqd4wa"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.kubernetes_alerts.grafana_folder.kubernetes_resources"
          ]
        }
      ]
    },
    {
      "module": "module.notification_channels",
      "mode": "managed",
      "type": "grafana_contact_point",
      "name": "notification_channels",
      "provider": "provider[\"registry.terraform.io/grafana/grafana\"]",
      "instances": [
        {
          "index_key": "email_ops",
          "schema_version": 0,
          "attributes": {
            "alertmanager": [],
            "dingding": [],
            "disable_provenance": false,
            "discord": [],
            "email": [
              {
                "addresses": [
                  "ops@example.com"
                ],
                "disable_resolve_message": false,
                "message": "{{ template \"email.default.message\" . }}",
                "settings": {},
                "single_email": true,
                "subject": "{{ template \"email.default.subject\" . }}",
                "uid": "beqgy8ueseq68f"
              }
            ],
            "googlechat": [],
            "id": "0:email-ops",
            "kafka": [],
            "line": [],
            "name": "email-ops",
            "oncall": [],
            "opsgenie": [],
            "org_id": "0",
            "pagerduty": [],
            "pushover": [],
            "sensugo": [],
            "slack": [],
            "sns": [],
            "teams": [],
            "telegram": [],
            "threema": [],
            "victorops": [],
            "webex": [],
            "webhook": [],
            "wecom": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
